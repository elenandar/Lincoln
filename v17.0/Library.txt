// === PROJECT LINCOLN v17 - LIBRARY ===
// Version: 17.0.2 (Phase 1 Hotfix)

(function () {
  // Более надежный способ получить доступ к state
  const getState = () => (typeof state !== 'undefined' ? state : {});

  // Инициализируем глобальный объект Lincoln Core (LC), если он еще не существует.
  if (typeof LC === 'undefined') {
    const _state = getState();
    _state.shared = _state.shared || {};

    globalThis.LC = {
      // --- СИСТЕМНЫЕ УТИЛИТЫ ---
      Tools: {
        toNum: (x, d = 0) => (typeof x === 'number' && !isNaN(x)) ? x : (Number(x) || d),
        toStr: (x) => String(x == null ? "" : x),
        toBool: (x, d = false) => (x == null ? d : !!x),
      },

      // --- СИСТЕМА СООБЩЕНИЙ ---
      _msgs: [],
      sysMsg: function(text) {
        if (text) LC._msgs.push({ text });
      },
      consumeMsgs: function() {
        return LC._msgs.splice(0);
      },
      replyStop: function(msg) {
        LC.sysMsg(`⟦SYS⟧ ${msg}`);
        return { text: '', stop: true };
      },

      // --- РЕЕСТР КОМАНД ---
      CommandsRegistry: new Map(),

      // --- ИНИЦИАЛИЗАЦИЯ ---
      lcInit: function(scriptName = 'Unknown') {
        const _state = getState();
        _state.lincoln = _state.lincoln || {};

        if (!_state.lincoln.version) {
          _state.lincoln.version = '17.0.2';
          _state.lincoln.turn = 0;
          _state.lincoln.characters = {};
          _state.lincoln.relations = {};
          _state.lincoln.hierarchy = {};
        }
        
        const action = (typeof globalThis.action !== 'undefined') ? globalThis.action : {};
        _state.lincoln.currentAction = {
          type: action.type || 'story',
          input: action.input || ''
        };
        
        return _state.lincoln;
      },

      // --- УПРАВЛЕНИЕ ХОДАМИ ---
      Turns: {
        get: () => (getState().lincoln?.turn || 0),
        inc: () => { if(getState().lincoln) getState().lincoln.turn = (getState().lincoln.turn || 0) + 1; },
        set: (n) => { if(getState().lincoln) getState().lincoln.turn = Math.max(0, LC.Tools.toNum(n)); }
      }
    };

    // --- РЕГИСТРАЦИЯ БАЗОВЫХ КОМАНД ---
    const REG = LC.CommandsRegistry;
    REG.set('/ping', {
      description: '/ping — Проверяет, работает ли система.',
      handler: () => LC.replyStop('Pong!')
    });
    REG.set('/turn', {
      description: '/turn — Показывает текущий ход.',
      handler: () => LC.replyStop(`Текущий ход: ${LC.Turns.get()}`)
    });
    REG.set('/debug', {
      description: '/debug — Показывает текущее состояние state.lincoln.',
      handler: () => {
        try {
          const debugString = JSON.stringify(getState().lincoln, (key, value) => {
            if (typeof value === 'string' && value.length > 150) {
              return value.substring(0, 150) + '...';
            }
            return value;
          }, 2);
          LC.sysMsg('== DEBUG: state.lincoln ==\n' + debugString);
        } catch (e) {
          LC.sysMsg('Ошибка при сериализации state.lincoln: ' + e.message);
        }
        return { text: '', stop: true };
      }
    });
  }
})();
