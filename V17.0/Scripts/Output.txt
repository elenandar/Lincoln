// Lincoln v17 - Output Script (Phase 1: Infrastructure)
// Processes AI output after generation
// Library.txt has already executed, LC is available

const modifier = (text) => {
    try {
        // Check for command output to relay
        if (state.lincoln && state.lincoln.commandOutput) {
            text = state.lincoln.commandOutput;
            delete state.lincoln.commandOutput;
            
            // Add [SYS] prefix to command output
            // Check if output already has [SYS] or ⟦SYS⟧ prefix to avoid duplication
            // (Library.txt error handlers use Unicode ⟦SYS⟧ format)
            if (text.indexOf('[SYS]') !== 0 && text.indexOf('\u27E6SYS\u27E7') !== 0) {
                text = '[SYS] ' + text;
            }
            
            return { text: text };
        }
        
        // Increment turn counter on normal AI output
        LC.Turns.increment();
        
        // Extract characters mentioned in output
        var characters = LC.CharacterTracker.extract(text);
        for (var i = 0; i < characters.length; i++) {
            LC.CharacterTracker.ensure(characters[i]);
        }
        
        // IMPORTANT: Never return empty string - causes script failure
        return { text: text || " " };
    } catch (e) {
        console.log("Output modifier error:", e);
        return { text: text || " " };
    }
};
modifier(text);
